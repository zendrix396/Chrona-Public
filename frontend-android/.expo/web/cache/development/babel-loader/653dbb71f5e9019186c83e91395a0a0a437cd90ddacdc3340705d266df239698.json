{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\nimport NotificationPresenter from \"./NotificationPresenterModule\";\nvar warningMessageShown = false;\nexport default function presentNotificationAsync(_x) {\n  return _presentNotificationAsync.apply(this, arguments);\n}\nfunction _presentNotificationAsync() {\n  _presentNotificationAsync = _asyncToGenerator(function* (content) {\n    var identifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : uuidv4();\n    if (__DEV__ && !warningMessageShown) {\n      console.warn('`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.');\n      warningMessageShown = true;\n    }\n    if (!NotificationPresenter.presentNotificationAsync) {\n      throw new UnavailabilityError('Notifications', 'presentNotificationAsync');\n    }\n    return yield NotificationPresenter.presentNotificationAsync(identifier, content);\n  });\n  return _presentNotificationAsync.apply(this, arguments);\n}","map":{"version":3,"names":["UnavailabilityError","v4","uuidv4","NotificationPresenter","warningMessageShown","presentNotificationAsync","_x","_presentNotificationAsync","apply","arguments","_asyncToGenerator","content","identifier","length","undefined","__DEV__","console","warn"],"sources":["C:\\Users\\shikhar\\Documents\\Programming\\Dev\\Utility\\frontend-android\\node_modules\\expo-notifications\\src\\presentNotificationAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NotificationPresenter from './NotificationPresenterModule';\nimport { NotificationContentInput } from './Notifications.types';\n\nlet warningMessageShown = false;\n\n/**\n * Schedules a notification for immediate trigger.\n * @param content An object representing the notification content.\n * @param identifier\n * @return It returns a Promise resolving with the notification's identifier once the notification is successfully scheduled for immediate display.\n * @header schedule\n * @deprecated This method has been deprecated in favor of using an explicit `NotificationHandler` and the [`scheduleNotificationAsync`](#notificationsschedulenotificationasyncrequest) method. More information can be found in our [FYI document](https://expo.fyi/presenting-notifications-deprecated).\n */\nexport default async function presentNotificationAsync(\n  content: NotificationContentInput,\n  identifier: string = uuidv4()\n): Promise<string> {\n  if (__DEV__ && !warningMessageShown) {\n    console.warn(\n      '`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.'\n    );\n    warningMessageShown = true;\n  }\n\n  if (!NotificationPresenter.presentNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'presentNotificationAsync');\n  }\n\n  return await NotificationPresenter.presentNotificationAsync(identifier, content);\n}\n"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AACvD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,OAAOC,qBAAqB;AAG5B,IAAIC,mBAAmB,GAAG,KAAK;AAU/B,wBAA8BC,wBAAwBA,CAAAC,EAAA;EAAA,OAAAC,yBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAgBrD,SAAAF,0BAAA;EAAAA,yBAAA,GAAAG,iBAAA,CAhBc,WACbC,OAAiC,EACJ;IAAA,IAA7BC,UAAA,GAAAH,SAAA,CAAAI,MAAA,QAAAJ,SAAA,QAAAK,SAAA,GAAAL,SAAA,MAAqBP,MAAM,EAAE;IAE7B,IAAIa,OAAO,IAAI,CAACX,mBAAmB,EAAE;MACnCY,OAAO,CAACC,IAAI,CACV,qMAAqM,CACtM;MACDb,mBAAmB,GAAG,IAAI;;IAG5B,IAAI,CAACD,qBAAqB,CAACE,wBAAwB,EAAE;MACnD,MAAM,IAAIL,mBAAmB,CAAC,eAAe,EAAE,0BAA0B,CAAC;;IAG5E,aAAaG,qBAAqB,CAACE,wBAAwB,CAACO,UAAU,EAAED,OAAO,CAAC;EAClF,CAAC;EAAA,OAAAJ,yBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}