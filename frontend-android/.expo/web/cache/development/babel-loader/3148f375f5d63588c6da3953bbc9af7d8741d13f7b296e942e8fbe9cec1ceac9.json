{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport BackgroundNotificationTasksModule from \"./BackgroundNotificationTasksModule.native\";\nexport default function unregisterTaskAsync(_x) {\n  return _unregisterTaskAsync.apply(this, arguments);\n}\nfunction _unregisterTaskAsync() {\n  _unregisterTaskAsync = _asyncToGenerator(function* (taskName) {\n    if (!BackgroundNotificationTasksModule.unregisterTaskAsync) {\n      throw new UnavailabilityError('Notifications', 'unregisterTaskAsync');\n    }\n    return yield BackgroundNotificationTasksModule.unregisterTaskAsync(taskName);\n  });\n  return _unregisterTaskAsync.apply(this, arguments);\n}","map":{"version":3,"names":["UnavailabilityError","BackgroundNotificationTasksModule","unregisterTaskAsync","_x","_unregisterTaskAsync","apply","arguments","_asyncToGenerator","taskName"],"sources":["C:\\Users\\shikhar\\Documents\\Programming\\Dev\\Utility\\frontend-android\\node_modules\\expo-notifications\\src\\unregisterTaskAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport BackgroundNotificationTasksModule from './BackgroundNotificationTasksModule.native';\n\n/**\n * Used to unregister tasks registered with `registerTaskAsync` method.\n * @param taskName The string you passed to `registerTaskAsync` as the `taskName` parameter.\n * @header inBackground\n */\nexport default async function unregisterTaskAsync(taskName: string): Promise<null> {\n  if (!BackgroundNotificationTasksModule.unregisterTaskAsync) {\n    throw new UnavailabilityError('Notifications', 'unregisterTaskAsync');\n  }\n\n  return await BackgroundNotificationTasksModule.unregisterTaskAsync(taskName);\n}\n"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,iCAAiC;AAOxC,wBAA8BC,mBAAmBA,CAAAC,EAAA;EAAA,OAAAC,oBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAMhD,SAAAF,qBAAA;EAAAA,oBAAA,GAAAG,iBAAA,CANc,WAAmCC,QAAgB;IAChE,IAAI,CAACP,iCAAiC,CAACC,mBAAmB,EAAE;MAC1D,MAAM,IAAIF,mBAAmB,CAAC,eAAe,EAAE,qBAAqB,CAAC;;IAGvE,aAAaC,iCAAiC,CAACC,mBAAmB,CAACM,QAAQ,CAAC;EAC9E,CAAC;EAAA,OAAAJ,oBAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}