{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport default function getNotificationChannelsAsync() {\n  return _getNotificationChannelsAsync.apply(this, arguments);\n}\nfunction _getNotificationChannelsAsync() {\n  _getNotificationChannelsAsync = _asyncToGenerator(function* () {\n    console.debug('Notification channels feature is only supported on Android.');\n    return [];\n  });\n  return _getNotificationChannelsAsync.apply(this, arguments);\n}","map":{"version":3,"names":["getNotificationChannelsAsync","_getNotificationChannelsAsync","apply","arguments","_asyncToGenerator","console","debug"],"sources":["C:\\Users\\shikhar\\Documents\\Programming\\Dev\\Utility\\frontend-android\\node_modules\\expo-notifications\\src\\getNotificationChannelsAsync.ts"],"sourcesContent":["import { NotificationChannel } from './NotificationChannelManager.types';\n\n/**\n * Fetches information about all known notification channels.\n * @return A Promise which resolves to an array of channels. On platforms that do not support notification channels,\n * it will always resolve to an empty array.\n * @platform android\n * @header channels\n */\nexport default async function getNotificationChannelsAsync(): Promise<NotificationChannel[]> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return [];\n}\n"],"mappings":";AASA,wBAA8BA,4BAA4BA,CAAA;EAAA,OAAAC,6BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAGzD,SAAAF,8BAAA;EAAAA,6BAAA,GAAAG,iBAAA,CAHc,aAA2C;IACxDC,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC;IAC5E,OAAO,EAAE;EACX,CAAC;EAAA,OAAAL,6BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}