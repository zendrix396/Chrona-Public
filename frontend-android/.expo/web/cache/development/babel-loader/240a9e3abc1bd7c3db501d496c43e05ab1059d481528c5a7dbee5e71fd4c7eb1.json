{"ast":null,"code":"export var IosAlertStyle;\n(function (IosAlertStyle) {\n  IosAlertStyle[IosAlertStyle[\"NONE\"] = 0] = \"NONE\";\n  IosAlertStyle[IosAlertStyle[\"BANNER\"] = 1] = \"BANNER\";\n  IosAlertStyle[IosAlertStyle[\"ALERT\"] = 2] = \"ALERT\";\n})(IosAlertStyle || (IosAlertStyle = {}));\nexport var IosAllowsPreviews;\n(function (IosAllowsPreviews) {\n  IosAllowsPreviews[IosAllowsPreviews[\"NEVER\"] = 0] = \"NEVER\";\n  IosAllowsPreviews[IosAllowsPreviews[\"ALWAYS\"] = 1] = \"ALWAYS\";\n  IosAllowsPreviews[IosAllowsPreviews[\"WHEN_AUTHENTICATED\"] = 2] = \"WHEN_AUTHENTICATED\";\n})(IosAllowsPreviews || (IosAllowsPreviews = {}));\nexport var IosAuthorizationStatus;\n(function (IosAuthorizationStatus) {\n  IosAuthorizationStatus[IosAuthorizationStatus[\"NOT_DETERMINED\"] = 0] = \"NOT_DETERMINED\";\n  IosAuthorizationStatus[IosAuthorizationStatus[\"DENIED\"] = 1] = \"DENIED\";\n  IosAuthorizationStatus[IosAuthorizationStatus[\"AUTHORIZED\"] = 2] = \"AUTHORIZED\";\n  IosAuthorizationStatus[IosAuthorizationStatus[\"PROVISIONAL\"] = 3] = \"PROVISIONAL\";\n  IosAuthorizationStatus[IosAuthorizationStatus[\"EPHEMERAL\"] = 4] = \"EPHEMERAL\";\n})(IosAuthorizationStatus || (IosAuthorizationStatus = {}));","map":{"version":3,"names":["IosAlertStyle","IosAllowsPreviews","IosAuthorizationStatus"],"sources":["C:\\Users\\shikhar\\Documents\\Programming\\Dev\\Utility\\frontend-android\\node_modules\\expo-notifications\\src\\NotificationPermissions.types.ts"],"sourcesContent":["import { PermissionResponse, PermissionHookOptions } from 'expo-modules-core';\n\nexport enum IosAlertStyle {\n  NONE = 0,\n  BANNER = 1,\n  ALERT = 2,\n}\n\nexport enum IosAllowsPreviews {\n  NEVER = 0,\n  ALWAYS = 1,\n  WHEN_AUTHENTICATED = 2,\n}\n\nexport enum IosAuthorizationStatus {\n  NOT_DETERMINED = 0,\n  DENIED = 1,\n  AUTHORIZED = 2,\n  PROVISIONAL = 3,\n  EPHEMERAL = 4,\n}\n\nexport { PermissionHookOptions };\n\n// @docsMissing\nexport interface NotificationPermissionsStatus extends PermissionResponse {\n  android?: {\n    importance: number;\n    interruptionFilter?: number;\n  };\n  ios?: {\n    status: IosAuthorizationStatus;\n    allowsDisplayInNotificationCenter: boolean | null;\n    allowsDisplayOnLockScreen: boolean | null;\n    allowsDisplayInCarPlay: boolean | null;\n    allowsAlert: boolean | null;\n    allowsBadge: boolean | null;\n    allowsSound: boolean | null;\n    allowsCriticalAlerts?: boolean | null;\n    alertStyle: IosAlertStyle;\n    allowsPreviews?: IosAllowsPreviews;\n    providesAppNotificationSettings?: boolean;\n    allowsAnnouncements?: boolean | null;\n  };\n}\n\n/**\n * Available configuration for permission request on iOS platform.\n * See Apple documentation for [`UNAuthorizationOptions`](https://developer.apple.com/documentation/usernotifications/unauthorizationoptions) to learn more.\n */\nexport interface IosNotificationPermissionsRequest {\n  /**\n   * The ability to display alerts.\n   */\n  allowAlert?: boolean;\n  /**\n   * The ability to update the appâ€™s badge.\n   */\n  allowBadge?: boolean;\n  /**\n   * The ability to play sounds.\n   */\n  allowSound?: boolean;\n  /**\n   * The ability to display notifications in a CarPlay environment.\n   */\n  allowDisplayInCarPlay?: boolean;\n  /**\n   * The ability to play sounds for critical alerts.\n   */\n  allowCriticalAlerts?: boolean;\n  /**\n   * An option indicating the system should display a button for in-app notification settings.\n   */\n  provideAppNotificationSettings?: boolean;\n  /**\n   * The ability to post noninterrupting notifications provisionally to the Notification Center.\n   */\n  allowProvisional?: boolean;\n  /**\n   * The ability for Siri to automatically read out messages over AirPods.\n   * @deprecated\n   */\n  allowAnnouncements?: boolean;\n}\n\nexport type NativeNotificationPermissionsRequest = IosNotificationPermissionsRequest | object;\n\n/**\n * An interface representing the permissions request scope configuration.\n * Each option corresponds to a different native platform authorization option.\n */\nexport interface NotificationPermissionsRequest {\n  /**\n   * Available configuration for permission request on iOS platform.\n   */\n  ios?: IosNotificationPermissionsRequest;\n  /**\n   * On Android, all available permissions are granted by default, and if a user declines any permission, an app cannot prompt the user to change.\n   */\n  android?: object;\n}\n"],"mappings":"AAEA,WAAYA,aAIX;AAJD,WAAYA,aAAa;EACvBA,aAAA,CAAAA,aAAA,sBAAQ;EACRA,aAAA,CAAAA,aAAA,0BAAU;EACVA,aAAA,CAAAA,aAAA,wBAAS;AACX,CAAC,EAJWA,aAAa,KAAbA,aAAa;AAMzB,WAAYC,iBAIX;AAJD,WAAYA,iBAAiB;EAC3BA,iBAAA,CAAAA,iBAAA,wBAAS;EACTA,iBAAA,CAAAA,iBAAA,0BAAU;EACVA,iBAAA,CAAAA,iBAAA,kDAAsB;AACxB,CAAC,EAJWA,iBAAiB,KAAjBA,iBAAiB;AAM7B,WAAYC,sBAMX;AAND,WAAYA,sBAAsB;EAChCA,sBAAA,CAAAA,sBAAA,0CAAkB;EAClBA,sBAAA,CAAAA,sBAAA,0BAAU;EACVA,sBAAA,CAAAA,sBAAA,kCAAc;EACdA,sBAAA,CAAAA,sBAAA,oCAAe;EACfA,sBAAA,CAAAA,sBAAA,gCAAa;AACf,CAAC,EANWA,sBAAsB,KAAtBA,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}