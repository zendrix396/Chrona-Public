{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport default function getNotificationChannelGroupsAsync() {\n  return _getNotificationChannelGroupsAsync.apply(this, arguments);\n}\nfunction _getNotificationChannelGroupsAsync() {\n  _getNotificationChannelGroupsAsync = _asyncToGenerator(function* () {\n    console.debug('Notification channels feature is only supported on Android.');\n    return [];\n  });\n  return _getNotificationChannelGroupsAsync.apply(this, arguments);\n}","map":{"version":3,"names":["getNotificationChannelGroupsAsync","_getNotificationChannelGroupsAsync","apply","arguments","_asyncToGenerator","console","debug"],"sources":["C:\\Users\\shikhar\\Documents\\Programming\\Dev\\Utility\\frontend-android\\node_modules\\expo-notifications\\src\\getNotificationChannelGroupsAsync.ts"],"sourcesContent":["import { NotificationChannelGroup } from './NotificationChannelGroupManager.types';\n\n/**\n * Fetches information about all known notification channel groups.\n * @return A Promise which resoles to an array of channel groups. On platforms that do not support notification channel groups,\n * it will always resolve to an empty array.\n * @platform android\n * @header channels\n */\nexport default async function getNotificationChannelGroupsAsync(): Promise<\n  NotificationChannelGroup[]\n> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return [];\n}\n"],"mappings":";AASA,wBAA8BA,iCAAiCA,CAAA;EAAA,OAAAC,kCAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAK9D,SAAAF,mCAAA;EAAAA,kCAAA,GAAAG,iBAAA,CALc,aAAgD;IAG7DC,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC;IAC5E,OAAO,EAAE;EACX,CAAC;EAAA,OAAAL,kCAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}