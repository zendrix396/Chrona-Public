{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport default function setNotificationChannelAsync(_x, _x2) {\n  return _setNotificationChannelAsync.apply(this, arguments);\n}\nfunction _setNotificationChannelAsync() {\n  _setNotificationChannelAsync = _asyncToGenerator(function* (channelId, channel) {\n    console.debug('Notification channels feature is only supported on Android.');\n    return null;\n  });\n  return _setNotificationChannelAsync.apply(this, arguments);\n}","map":{"version":3,"names":["setNotificationChannelAsync","_x","_x2","_setNotificationChannelAsync","apply","arguments","_asyncToGenerator","channelId","channel","console","debug"],"sources":["C:\\Users\\shikhar\\Documents\\Programming\\Dev\\Utility\\frontend-android\\node_modules\\expo-notifications\\src\\setNotificationChannelAsync.ts"],"sourcesContent":["import { NotificationChannel, NotificationChannelInput } from './NotificationChannelManager.types';\n\n/**\n * Assigns the channel configuration to a channel of a specified name (creating it if need be).\n * This method lets you assign given notification channel to a notification channel group.\n *\n * > **Note:** For some settings to be applied on all Android versions, it may be necessary to duplicate the configuration across both\n * > a single notification and its respective notification channel.\n *\n * For example, for a notification to play a custom sound on Android versions **below** 8.0,\n * the custom notification sound has to be set on the notification (through the [`NotificationContentInput`](#notificationcontentinput)),\n * and for the custom sound to play on Android versions **above** 8.0, the relevant notification channel must have the custom sound configured\n * (through the [`NotificationChannelInput`](#notificationchannelinput)). For more information,\n * see [\"Setting custom notification sounds on Android\"](#setting-custom-notification-sounds-on-android).\n * @param channelId The channel identifier.\n * @param channel Object representing the channel's configuration.\n * @return A Promise which resolving to the object (of type [`NotificationChannel`](#notificationchannel)) describing the modified channel\n * or to `null` if the platform does not support notification channels.\n * @platform android\n * @header channels\n */\nexport default async function setNotificationChannelAsync(\n  channelId: string,\n  channel: NotificationChannelInput\n): Promise<NotificationChannel | null> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return null;\n}\n"],"mappings":";AAqBA,wBAA8BA,2BAA2BA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,4BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAMxD,SAAAF,6BAAA;EAAAA,4BAAA,GAAAG,iBAAA,CANc,WACbC,SAAiB,EACjBC,OAAiC;IAEjCC,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC;IAC5E,OAAO,IAAI;EACb,CAAC;EAAA,OAAAP,4BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}