{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport default function getNotificationChannelGroupAsync(_x) {\n  return _getNotificationChannelGroupAsync.apply(this, arguments);\n}\nfunction _getNotificationChannelGroupAsync() {\n  _getNotificationChannelGroupAsync = _asyncToGenerator(function* (groupId) {\n    console.debug('Notification channels feature is only supported on Android.');\n    return null;\n  });\n  return _getNotificationChannelGroupAsync.apply(this, arguments);\n}","map":{"version":3,"names":["getNotificationChannelGroupAsync","_x","_getNotificationChannelGroupAsync","apply","arguments","_asyncToGenerator","groupId","console","debug"],"sources":["C:\\Users\\shikhar\\Documents\\Programming\\Dev\\Utility\\frontend-android\\node_modules\\expo-notifications\\src\\getNotificationChannelGroupAsync.ts"],"sourcesContent":["import { NotificationChannelGroup } from './NotificationChannelGroupManager.types';\n\n/**\n * Fetches information about a single notification channel group.\n * @param groupId The channel group's identifier.\n * @return A Promise which resolves to the channel group object (of type [`NotificationChannelGroup`](#notificationchannelgroup))\n * or to `null` if there was no channel group found for this identifier. On platforms that do not support notification channels,\n * it will always resolve to `null`.\n * @platform android\n * @header channels\n */\nexport default async function getNotificationChannelGroupAsync(\n  groupId: string\n): Promise<NotificationChannelGroup | null> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return null;\n}\n"],"mappings":";AAWA,wBAA8BA,gCAAgCA,CAAAC,EAAA;EAAA,OAAAC,iCAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAK7D,SAAAF,kCAAA;EAAAA,iCAAA,GAAAG,iBAAA,CALc,WACbC,OAAe;IAEfC,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC;IAC5E,OAAO,IAAI;EACb,CAAC;EAAA,OAAAN,iCAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}