{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport theme from \"../theme/theme\";\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Button = function Button(_ref) {\n  var title = _ref.title,\n    onPress = _ref.onPress,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'medium' : _ref$size,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$loading = _ref.loading,\n    loading = _ref$loading === void 0 ? false : _ref$loading,\n    style = _ref.style,\n    textStyle = _ref.textStyle,\n    icon = _ref.icon;\n  var getButtonStyle = function getButtonStyle() {\n    var buttonStyle = _objectSpread({}, styles.button);\n    switch (variant) {\n      case 'primary':\n        buttonStyle.backgroundColor = theme.colors.primary;\n        break;\n      case 'secondary':\n        buttonStyle.backgroundColor = theme.colors.surface;\n        break;\n      case 'outline':\n        buttonStyle.backgroundColor = 'transparent';\n        buttonStyle.borderWidth = 1;\n        buttonStyle.borderColor = theme.colors.primary;\n        break;\n      case 'danger':\n        buttonStyle.backgroundColor = theme.colors.error;\n        break;\n    }\n    switch (size) {\n      case 'small':\n        buttonStyle.paddingVertical = theme.spacing.xs;\n        buttonStyle.paddingHorizontal = theme.spacing.md;\n        buttonStyle.minWidth = 100;\n        break;\n      case 'medium':\n        buttonStyle.paddingVertical = theme.spacing.sm;\n        buttonStyle.paddingHorizontal = theme.spacing.lg;\n        buttonStyle.minWidth = 150;\n        break;\n      case 'large':\n        buttonStyle.paddingVertical = theme.spacing.md;\n        buttonStyle.paddingHorizontal = theme.spacing.xl;\n        buttonStyle.minWidth = 200;\n        break;\n    }\n    if (disabled) {\n      buttonStyle.opacity = 0.6;\n    }\n    return buttonStyle;\n  };\n  var getTextStyle = function getTextStyle() {\n    var textStyleVariant = _objectSpread({}, styles.text);\n    switch (variant) {\n      case 'outline':\n        textStyleVariant.color = theme.colors.primary;\n        break;\n      default:\n        textStyleVariant.color = variant === 'primary' || variant === 'danger' ? theme.colors.background : theme.colors.text;\n        break;\n    }\n    switch (size) {\n      case 'small':\n        textStyleVariant.fontSize = theme.typography.fontSizes.sm;\n        break;\n      case 'medium':\n        textStyleVariant.fontSize = theme.typography.fontSizes.md;\n        break;\n      case 'large':\n        textStyleVariant.fontSize = theme.typography.fontSizes.lg;\n        break;\n    }\n    return textStyleVariant;\n  };\n  return _jsx(TouchableOpacity, {\n    style: [getButtonStyle(), style],\n    onPress: onPress,\n    disabled: disabled || loading,\n    activeOpacity: 0.8,\n    children: loading ? _jsx(ActivityIndicator, {\n      color: variant === 'outline' ? theme.colors.primary : theme.colors.background,\n      size: \"small\"\n    }) : _jsxs(_Fragment, {\n      children: [icon, _jsx(Text, {\n        style: [getTextStyle(), textStyle],\n        children: title\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    borderRadius: theme.radius.md,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  text: {\n    fontWeight: theme.typography.fontWeights.medium,\n    marginLeft: 8\n  }\n});\nexport default Button;","map":{"version":3,"names":["React","TouchableOpacity","Text","StyleSheet","ActivityIndicator","theme","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Button","_ref","title","onPress","_ref$variant","variant","_ref$size","size","_ref$disabled","disabled","_ref$loading","loading","style","textStyle","icon","getButtonStyle","buttonStyle","_objectSpread","styles","button","backgroundColor","colors","primary","surface","borderWidth","borderColor","error","paddingVertical","spacing","xs","paddingHorizontal","md","minWidth","sm","lg","xl","opacity","getTextStyle","textStyleVariant","text","color","background","fontSize","typography","fontSizes","activeOpacity","children","create","borderRadius","radius","alignItems","justifyContent","flexDirection","fontWeight","fontWeights","medium","marginLeft"],"sources":["C:/Users/shikhar/Documents/Programming/Dev/Utility/frontend-android/src/components/Button.tsx"],"sourcesContent":["import React from 'react';\r\nimport { \r\n  TouchableOpacity, \r\n  Text, \r\n  StyleSheet, \r\n  ViewStyle, \r\n  TextStyle, \r\n  ActivityIndicator \r\n} from 'react-native';\r\nimport theme from '../theme/theme';\r\n\r\ninterface ButtonProps {\r\n  title: string;\r\n  onPress: () => void;\r\n  variant?: 'primary' | 'secondary' | 'outline' | 'danger';\r\n  size?: 'small' | 'medium' | 'large';\r\n  disabled?: boolean;\r\n  loading?: boolean;\r\n  style?: ViewStyle;\r\n  textStyle?: TextStyle;\r\n  icon?: React.ReactNode;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  title,\r\n  onPress,\r\n  variant = 'primary',\r\n  size = 'medium',\r\n  disabled = false,\r\n  loading = false,\r\n  style,\r\n  textStyle,\r\n  icon,\r\n}) => {\r\n  // Determine button and text styles based on variant and size\r\n  const getButtonStyle = (): ViewStyle => {\r\n    let buttonStyle: ViewStyle = {\r\n      ...styles.button,\r\n    };\r\n\r\n    // Variant styles\r\n    switch (variant) {\r\n      case 'primary':\r\n        buttonStyle.backgroundColor = theme.colors.primary;\r\n        break;\r\n      case 'secondary':\r\n        buttonStyle.backgroundColor = theme.colors.surface;\r\n        break;\r\n      case 'outline':\r\n        buttonStyle.backgroundColor = 'transparent';\r\n        buttonStyle.borderWidth = 1;\r\n        buttonStyle.borderColor = theme.colors.primary;\r\n        break;\r\n      case 'danger':\r\n        buttonStyle.backgroundColor = theme.colors.error;\r\n        break;\r\n    }\r\n\r\n    // Size styles\r\n    switch (size) {\r\n      case 'small':\r\n        buttonStyle.paddingVertical = theme.spacing.xs;\r\n        buttonStyle.paddingHorizontal = theme.spacing.md;\r\n        buttonStyle.minWidth = 100;\r\n        break;\r\n      case 'medium':\r\n        buttonStyle.paddingVertical = theme.spacing.sm;\r\n        buttonStyle.paddingHorizontal = theme.spacing.lg;\r\n        buttonStyle.minWidth = 150;\r\n        break;\r\n      case 'large':\r\n        buttonStyle.paddingVertical = theme.spacing.md;\r\n        buttonStyle.paddingHorizontal = theme.spacing.xl;\r\n        buttonStyle.minWidth = 200;\r\n        break;\r\n    }\r\n\r\n    // Disabled styles\r\n    if (disabled) {\r\n      buttonStyle.opacity = 0.6;\r\n    }\r\n\r\n    return buttonStyle;\r\n  };\r\n\r\n  const getTextStyle = (): TextStyle => {\r\n    let textStyleVariant: TextStyle = {\r\n      ...styles.text,\r\n    };\r\n\r\n    switch (variant) {\r\n      case 'outline':\r\n        textStyleVariant.color = theme.colors.primary;\r\n        break;\r\n      default:\r\n        textStyleVariant.color = \r\n          variant === 'primary' || variant === 'danger' \r\n            ? theme.colors.background \r\n            : theme.colors.text;\r\n        break;\r\n    }\r\n\r\n    switch (size) {\r\n      case 'small':\r\n        textStyleVariant.fontSize = theme.typography.fontSizes.sm;\r\n        break;\r\n      case 'medium':\r\n        textStyleVariant.fontSize = theme.typography.fontSizes.md;\r\n        break;\r\n      case 'large':\r\n        textStyleVariant.fontSize = theme.typography.fontSizes.lg;\r\n        break;\r\n    }\r\n\r\n    return textStyleVariant;\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={[getButtonStyle(), style]}\r\n      onPress={onPress}\r\n      disabled={disabled || loading}\r\n      activeOpacity={0.8}\r\n    >\r\n      {loading ? (\r\n        <ActivityIndicator \r\n          color={variant === 'outline' ? theme.colors.primary : theme.colors.background} \r\n          size=\"small\" \r\n        />\r\n      ) : (\r\n        <>\r\n          {icon}\r\n          <Text style={[getTextStyle(), textStyle]}>{title}</Text>\r\n        </>\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    borderRadius: theme.radius.md,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  text: {\r\n    fontWeight: theme.typography.fontWeights.medium as any,\r\n    marginLeft: 8,\r\n  },\r\n});\r\n\r\nexport default Button; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}