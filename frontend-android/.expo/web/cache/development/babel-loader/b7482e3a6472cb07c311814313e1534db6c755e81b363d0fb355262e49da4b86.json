{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { useNavigation } from '@react-navigation/native';\nimport Button from \"../components/Button\";\nimport theme from \"../theme/theme\";\nimport { TaskService } from \"../services/api\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TaskSelectionScreen = function TaskSelectionScreen() {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedTaskId = _useState8[0],\n    setSelectedTaskId = _useState8[1];\n  useEffect(function () {\n    fetchTasks();\n  }, []);\n  var fetchTasks = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var fetchedTasks = yield TaskService.fetchTasks();\n        setTasks(fetchedTasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n        Alert.alert('Error', 'Failed to fetch tasks. Please try again.');\n      } finally {\n        setLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function fetchTasks() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var handleRefresh = function handleRefresh() {\n    setRefreshing(true);\n    fetchTasks();\n  };\n  var handleTaskSelect = function handleTaskSelect(task) {\n    setSelectedTaskId(task.id);\n  };\n  var handleStartTracking = function handleStartTracking() {\n    if (!selectedTaskId) {\n      Alert.alert('Selection Required', 'Please select a task to track');\n      return;\n    }\n    var selectedTask = tasks.find(function (task) {\n      return task.id === selectedTaskId;\n    });\n    if (selectedTask) {\n      navigation.navigate('Timer', {\n        taskId: selectedTask.id,\n        taskName: selectedTask.name\n      });\n    }\n  };\n  var handleCreateTask = function handleCreateTask() {\n    navigation.navigate('CreateTask');\n  };\n  var renderTaskItem = function renderTaskItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(TouchableOpacity, {\n      style: [styles.taskItem, selectedTaskId === item.id && styles.taskItemSelected],\n      onPress: function onPress() {\n        return handleTaskSelect(item);\n      },\n      children: [_jsxs(View, {\n        style: styles.taskInfo,\n        children: [_jsx(Text, {\n          style: styles.taskName,\n          children: item.name\n        }), item.description && _jsx(Text, {\n          style: styles.taskDescription,\n          children: item.description\n        })]\n      }), selectedTaskId === item.id && _jsx(View, {\n        style: styles.checkmark,\n        children: _jsx(Text, {\n          style: styles.checkmarkText,\n          children: \"\\u2713\"\n        })\n      })]\n    });\n  };\n  var renderEmptyList = function renderEmptyList() {\n    return _jsxs(View, {\n      style: styles.emptyContainer,\n      children: [_jsx(Text, {\n        style: styles.emptyText,\n        children: \"No tasks found\"\n      }), _jsx(Text, {\n        style: styles.emptySubtext,\n        children: \"Create a task to start tracking time\"\n      }), _jsx(Button, {\n        title: \"Create Task\",\n        onPress: handleCreateTask,\n        variant: \"primary\",\n        style: styles.emptyButton\n      })]\n    });\n  };\n  if (loading && !refreshing) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Loading tasks...\"\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.header,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: \"Select Task\"\n      })\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderTaskItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      contentContainerStyle: styles.listContainer,\n      ListEmptyComponent: renderEmptyList,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: handleRefresh,\n        colors: [theme.colors.primary],\n        progressBackgroundColor: theme.colors.card,\n        tintColor: theme.colors.primary\n      })\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        title: \"Create New Task\",\n        onPress: handleCreateTask,\n        variant: \"outline\",\n        style: styles.button\n      }), _jsx(Button, {\n        title: \"Start Tracking\",\n        onPress: handleStartTracking,\n        variant: \"primary\",\n        disabled: !selectedTaskId,\n        style: styles.button\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  header: {\n    padding: theme.spacing.lg,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.divider\n  },\n  title: {\n    fontSize: theme.typography.fontSizes.xl,\n    fontWeight: theme.typography.fontWeights.bold,\n    color: theme.colors.text\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background\n  },\n  loadingText: {\n    marginTop: theme.spacing.md,\n    color: theme.colors.text,\n    fontSize: theme.typography.fontSizes.md\n  },\n  listContainer: {\n    flexGrow: 1,\n    padding: theme.spacing.md\n  },\n  taskItem: _objectSpread({\n    flexDirection: 'row',\n    padding: theme.spacing.md,\n    backgroundColor: theme.colors.card,\n    borderRadius: theme.radius.md,\n    marginBottom: theme.spacing.md\n  }, theme.shadows.sm),\n  taskItemSelected: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.primary\n  },\n  taskInfo: {\n    flex: 1\n  },\n  taskName: {\n    fontSize: theme.typography.fontSizes.md,\n    fontWeight: theme.typography.fontWeights.semibold,\n    color: theme.colors.text,\n    marginBottom: 4\n  },\n  taskDescription: {\n    fontSize: theme.typography.fontSizes.sm,\n    color: theme.colors.secondaryText\n  },\n  checkmark: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    backgroundColor: theme.colors.primary\n  },\n  checkmarkText: {\n    color: theme.colors.background,\n    fontSize: theme.typography.fontSizes.sm,\n    fontWeight: theme.typography.fontWeights.bold\n  },\n  buttonContainer: {\n    padding: theme.spacing.lg,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.divider\n  },\n  button: {\n    marginVertical: theme.spacing.xs\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing.xl\n  },\n  emptyText: {\n    fontSize: theme.typography.fontSizes.lg,\n    fontWeight: theme.typography.fontWeights.medium,\n    color: theme.colors.text,\n    marginBottom: theme.spacing.sm\n  },\n  emptySubtext: {\n    fontSize: theme.typography.fontSizes.md,\n    color: theme.colors.secondaryText,\n    textAlign: 'center',\n    marginBottom: theme.spacing.lg\n  },\n  emptyButton: {\n    marginTop: theme.spacing.md\n  }\n});\nexport default TaskSelectionScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","FlatList","TouchableOpacity","ActivityIndicator","Alert","RefreshControl","useNavigation","Button","theme","TaskService","jsx","_jsx","jsxs","_jsxs","TaskSelectionScreen","navigation","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","loading","setLoading","_useState5","_useState6","refreshing","setRefreshing","_useState7","_useState8","selectedTaskId","setSelectedTaskId","fetchTasks","_ref","_asyncToGenerator","fetchedTasks","error","console","alert","apply","arguments","handleRefresh","handleTaskSelect","task","id","handleStartTracking","selectedTask","find","navigate","taskId","taskName","name","handleCreateTask","renderTaskItem","_ref2","item","style","styles","taskItem","taskItemSelected","onPress","children","taskInfo","description","taskDescription","checkmark","checkmarkText","renderEmptyList","emptyContainer","emptyText","emptySubtext","title","variant","emptyButton","loadingContainer","size","color","colors","primary","loadingText","container","header","data","renderItem","keyExtractor","toString","contentContainerStyle","listContainer","ListEmptyComponent","refreshControl","onRefresh","progressBackgroundColor","card","tintColor","buttonContainer","button","disabled","create","flex","backgroundColor","background","padding","spacing","lg","borderBottomWidth","borderBottomColor","divider","fontSize","typography","fontSizes","xl","fontWeight","fontWeights","bold","text","justifyContent","alignItems","marginTop","md","flexGrow","_objectSpread","flexDirection","borderRadius","radius","marginBottom","shadows","sm","surface","borderWidth","borderColor","semibold","secondaryText","width","height","borderTopWidth","borderTopColor","marginVertical","xs","medium","textAlign"],"sources":["C:/Users/shikhar/Documents/Programming/Dev/Utility/frontend-android/src/screens/TaskSelectionScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { \r\n  View, \r\n  Text, \r\n  StyleSheet, \r\n  FlatList, \r\n  TouchableOpacity, \r\n  ActivityIndicator,\r\n  Alert,\r\n  RefreshControl\r\n} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { RootStackParamList, Task } from '../types';\r\nimport Button from '../components/Button';\r\nimport theme from '../theme/theme';\r\nimport { TaskService } from '../services/api';\r\n\r\ntype TaskSelectionScreenNavigationProp = StackNavigationProp<RootStackParamList, 'TaskSelection'>;\r\n\r\nconst TaskSelectionScreen: React.FC = () => {\r\n  const navigation = useNavigation<TaskSelectionScreenNavigationProp>();\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [refreshing, setRefreshing] = useState<boolean>(false);\r\n  const [selectedTaskId, setSelectedTaskId] = useState<number | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const fetchedTasks = await TaskService.fetchTasks();\r\n      setTasks(fetchedTasks);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n      Alert.alert('Error', 'Failed to fetch tasks. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    setRefreshing(true);\r\n    fetchTasks();\r\n  };\r\n\r\n  const handleTaskSelect = (task: Task) => {\r\n    setSelectedTaskId(task.id);\r\n  };\r\n\r\n  const handleStartTracking = () => {\r\n    if (!selectedTaskId) {\r\n      Alert.alert('Selection Required', 'Please select a task to track');\r\n      return;\r\n    }\r\n\r\n    const selectedTask = tasks.find(task => task.id === selectedTaskId);\r\n    if (selectedTask) {\r\n      navigation.navigate('Timer', { taskId: selectedTask.id, taskName: selectedTask.name });\r\n    }\r\n  };\r\n\r\n  const handleCreateTask = () => {\r\n    navigation.navigate('CreateTask');\r\n  };\r\n\r\n  const renderTaskItem = ({ item }: { item: Task }) => (\r\n    <TouchableOpacity\r\n      style={[\r\n        styles.taskItem,\r\n        selectedTaskId === item.id && styles.taskItemSelected\r\n      ]}\r\n      onPress={() => handleTaskSelect(item)}\r\n    >\r\n      <View style={styles.taskInfo}>\r\n        <Text style={styles.taskName}>{item.name}</Text>\r\n        {item.description && (\r\n          <Text style={styles.taskDescription}>{item.description}</Text>\r\n        )}\r\n      </View>\r\n      {selectedTaskId === item.id && (\r\n        <View style={styles.checkmark}>\r\n          <Text style={styles.checkmarkText}>✓</Text>\r\n        </View>\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const renderEmptyList = () => (\r\n    <View style={styles.emptyContainer}>\r\n      <Text style={styles.emptyText}>No tasks found</Text>\r\n      <Text style={styles.emptySubtext}>Create a task to start tracking time</Text>\r\n      <Button\r\n        title=\"Create Task\"\r\n        onPress={handleCreateTask}\r\n        variant=\"primary\"\r\n        style={styles.emptyButton}\r\n      />\r\n    </View>\r\n  );\r\n\r\n  if (loading && !refreshing) {\r\n    return (\r\n      <View style={styles.loadingContainer}>\r\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\r\n        <Text style={styles.loadingText}>Loading tasks...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.title}>Select Task</Text>\r\n      </View>\r\n\r\n      <FlatList\r\n        data={tasks}\r\n        renderItem={renderTaskItem}\r\n        keyExtractor={item => item.id.toString()}\r\n        contentContainerStyle={styles.listContainer}\r\n        ListEmptyComponent={renderEmptyList}\r\n        refreshControl={\r\n          <RefreshControl\r\n            refreshing={refreshing}\r\n            onRefresh={handleRefresh}\r\n            colors={[theme.colors.primary]}\r\n            progressBackgroundColor={theme.colors.card}\r\n            tintColor={theme.colors.primary}\r\n          />\r\n        }\r\n      />\r\n\r\n      <View style={styles.buttonContainer}>\r\n        <Button\r\n          title=\"Create New Task\"\r\n          onPress={handleCreateTask}\r\n          variant=\"outline\"\r\n          style={styles.button}\r\n        />\r\n        <Button\r\n          title=\"Start Tracking\"\r\n          onPress={handleStartTracking}\r\n          variant=\"primary\"\r\n          disabled={!selectedTaskId}\r\n          style={styles.button}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: theme.colors.background,\r\n  },\r\n  header: {\r\n    padding: theme.spacing.lg,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: theme.colors.divider,\r\n  },\r\n  title: {\r\n    fontSize: theme.typography.fontSizes.xl,\r\n    fontWeight: theme.typography.fontWeights.bold as any,\r\n    color: theme.colors.text,\r\n  },\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: theme.colors.background,\r\n  },\r\n  loadingText: {\r\n    marginTop: theme.spacing.md,\r\n    color: theme.colors.text,\r\n    fontSize: theme.typography.fontSizes.md,\r\n  },\r\n  listContainer: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.md,\r\n  },\r\n  taskItem: {\r\n    flexDirection: 'row',\r\n    padding: theme.spacing.md,\r\n    backgroundColor: theme.colors.card,\r\n    borderRadius: theme.radius.md,\r\n    marginBottom: theme.spacing.md,\r\n    ...theme.shadows.sm,\r\n  },\r\n  taskItemSelected: {\r\n    backgroundColor: theme.colors.surface,\r\n    borderWidth: 1,\r\n    borderColor: theme.colors.primary,\r\n  },\r\n  taskInfo: {\r\n    flex: 1,\r\n  },\r\n  taskName: {\r\n    fontSize: theme.typography.fontSizes.md,\r\n    fontWeight: theme.typography.fontWeights.semibold as any,\r\n    color: theme.colors.text,\r\n    marginBottom: 4,\r\n  },\r\n  taskDescription: {\r\n    fontSize: theme.typography.fontSizes.sm,\r\n    color: theme.colors.secondaryText,\r\n  },\r\n  checkmark: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: 24,\r\n    height: 24,\r\n    borderRadius: 12,\r\n    backgroundColor: theme.colors.primary,\r\n  },\r\n  checkmarkText: {\r\n    color: theme.colors.background,\r\n    fontSize: theme.typography.fontSizes.sm,\r\n    fontWeight: theme.typography.fontWeights.bold as any,\r\n  },\r\n  buttonContainer: {\r\n    padding: theme.spacing.lg,\r\n    borderTopWidth: 1,\r\n    borderTopColor: theme.colors.divider,\r\n  },\r\n  button: {\r\n    marginVertical: theme.spacing.xs,\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: theme.spacing.xl,\r\n  },\r\n  emptyText: {\r\n    fontSize: theme.typography.fontSizes.lg,\r\n    fontWeight: theme.typography.fontWeights.medium as any,\r\n    color: theme.colors.text,\r\n    marginBottom: theme.spacing.sm,\r\n  },\r\n  emptySubtext: {\r\n    fontSize: theme.typography.fontSizes.md,\r\n    color: theme.colors.secondaryText,\r\n    textAlign: 'center',\r\n    marginBottom: theme.spacing.lg,\r\n  },\r\n  emptyButton: {\r\n    marginTop: theme.spacing.md,\r\n  },\r\n});\r\n\r\nexport default TaskSelectionScreen; "],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,cAAA;AAWnD,SAASC,aAAa,QAAQ,0BAA0B;AAGxD,OAAOC,MAAM;AACb,OAAOC,KAAK;AACZ,SAASC,WAAW;AAA0B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAI9C,IAAMC,mBAA6B,GAAG,SAAhCA,mBAA6BA,CAAA,EAAS;EAC1C,IAAMC,UAAU,GAAGT,aAAa,CAAoC,CAAC;EACrE,IAAAU,SAAA,GAA0BnB,QAAQ,CAAS,EAAE,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAA8BxB,QAAQ,CAAU,IAAI,CAAC;IAAAyB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA9CE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAAoC5B,QAAQ,CAAU,KAAK,CAAC;IAAA6B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArDE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAA4ChC,QAAQ,CAAgB,IAAI,CAAC;IAAAiC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAlEE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAExClC,SAAS,CAAC,YAAM;IACdqC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,UAAU;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC7B,IAAI;QACFX,UAAU,CAAC,IAAI,CAAC;QAChB,IAAMY,YAAY,SAAS3B,WAAW,CAACwB,UAAU,CAAC,CAAC;QACnDb,QAAQ,CAACgB,YAAY,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CjC,KAAK,CAACmC,KAAK,CAAC,OAAO,EAAE,0CAA0C,CAAC;MAClE,CAAC,SAAS;QACRf,UAAU,CAAC,KAAK,CAAC;QACjBI,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC;IAAA,gBAZKK,UAAUA,CAAA;MAAA,OAAAC,IAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYf;EAED,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1Bd,aAAa,CAAC,IAAI,CAAC;IACnBK,UAAU,CAAC,CAAC;EACd,CAAC;EAED,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,IAAU,EAAK;IACvCZ,iBAAiB,CAACY,IAAI,CAACC,EAAE,CAAC;EAC5B,CAAC;EAED,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChC,IAAI,CAACf,cAAc,EAAE;MACnB3B,KAAK,CAACmC,KAAK,CAAC,oBAAoB,EAAE,+BAA+B,CAAC;MAClE;IACF;IAEA,IAAMQ,YAAY,GAAG5B,KAAK,CAAC6B,IAAI,CAAC,UAAAJ,IAAI;MAAA,OAAIA,IAAI,CAACC,EAAE,KAAKd,cAAc;IAAA,EAAC;IACnE,IAAIgB,YAAY,EAAE;MAChBhC,UAAU,CAACkC,QAAQ,CAAC,OAAO,EAAE;QAAEC,MAAM,EAAEH,YAAY,CAACF,EAAE;QAAEM,QAAQ,EAAEJ,YAAY,CAACK;MAAK,CAAC,CAAC;IACxF;EACF,CAAC;EAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7BtC,UAAU,CAACkC,QAAQ,CAAC,YAAY,CAAC;EACnC,CAAC;EAED,IAAMK,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OAC5B3C,KAAA,CAACX,gBAAgB;MACfuD,KAAK,EAAE,CACLC,MAAM,CAACC,QAAQ,EACf5B,cAAc,KAAKyB,IAAI,CAACX,EAAE,IAAIa,MAAM,CAACE,gBAAgB,CACrD;MACFC,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQlB,gBAAgB,CAACa,IAAI,CAAC;MAAA,CAAC;MAAAM,QAAA,GAEtCjD,KAAA,CAACf,IAAI;QAAC2D,KAAK,EAAEC,MAAM,CAACK,QAAS;QAAAD,QAAA,GAC3BnD,IAAA,CAACZ,IAAI;UAAC0D,KAAK,EAAEC,MAAM,CAACP,QAAS;UAAAW,QAAA,EAAEN,IAAI,CAACJ;QAAI,CAAO,CAAC,EAC/CI,IAAI,CAACQ,WAAW,IACfrD,IAAA,CAACZ,IAAI;UAAC0D,KAAK,EAAEC,MAAM,CAACO,eAAgB;UAAAH,QAAA,EAAEN,IAAI,CAACQ;QAAW,CAAO,CAC9D;MAAA,CACG,CAAC,EACNjC,cAAc,KAAKyB,IAAI,CAACX,EAAE,IACzBlC,IAAA,CAACb,IAAI;QAAC2D,KAAK,EAAEC,MAAM,CAACQ,SAAU;QAAAJ,QAAA,EAC5BnD,IAAA,CAACZ,IAAI;UAAC0D,KAAK,EAAEC,MAAM,CAACS,aAAc;UAAAL,QAAA,EAAC;QAAC,CAAM;MAAC,CACvC,CACP;IAAA,CACe,CAAC;EAAA,CACpB;EAED,IAAMM,eAAe,GAAG,SAAlBA,eAAeA,CAAA;IAAA,OACnBvD,KAAA,CAACf,IAAI;MAAC2D,KAAK,EAAEC,MAAM,CAACW,cAAe;MAAAP,QAAA,GACjCnD,IAAA,CAACZ,IAAI;QAAC0D,KAAK,EAAEC,MAAM,CAACY,SAAU;QAAAR,QAAA,EAAC;MAAc,CAAM,CAAC,EACpDnD,IAAA,CAACZ,IAAI;QAAC0D,KAAK,EAAEC,MAAM,CAACa,YAAa;QAAAT,QAAA,EAAC;MAAoC,CAAM,CAAC,EAC7EnD,IAAA,CAACJ,MAAM;QACLiE,KAAK,EAAC,aAAa;QACnBX,OAAO,EAAER,gBAAiB;QAC1BoB,OAAO,EAAC,SAAS;QACjBhB,KAAK,EAAEC,MAAM,CAACgB;MAAY,CAC3B,CAAC;IAAA,CACE,CAAC;EAAA,CACR;EAED,IAAInD,OAAO,IAAI,CAACI,UAAU,EAAE;IAC1B,OACEd,KAAA,CAACf,IAAI;MAAC2D,KAAK,EAAEC,MAAM,CAACiB,gBAAiB;MAAAb,QAAA,GACnCnD,IAAA,CAACR,iBAAiB;QAACyE,IAAI,EAAC,OAAO;QAACC,KAAK,EAAErE,KAAK,CAACsE,MAAM,CAACC;MAAQ,CAAE,CAAC,EAC/DpE,IAAA,CAACZ,IAAI;QAAC0D,KAAK,EAAEC,MAAM,CAACsB,WAAY;QAAAlB,QAAA,EAAC;MAAgB,CAAM,CAAC;IAAA,CACpD,CAAC;EAEX;EAEA,OACEjD,KAAA,CAACf,IAAI;IAAC2D,KAAK,EAAEC,MAAM,CAACuB,SAAU;IAAAnB,QAAA,GAC5BnD,IAAA,CAACb,IAAI;MAAC2D,KAAK,EAAEC,MAAM,CAACwB,MAAO;MAAApB,QAAA,EACzBnD,IAAA,CAACZ,IAAI;QAAC0D,KAAK,EAAEC,MAAM,CAACc,KAAM;QAAAV,QAAA,EAAC;MAAW,CAAM;IAAC,CACzC,CAAC,EAEPnD,IAAA,CAACV,QAAQ;MACPkF,IAAI,EAAEhE,KAAM;MACZiE,UAAU,EAAE9B,cAAe;MAC3B+B,YAAY,EAAE,SAAdA,YAAYA,CAAE7B,IAAI;QAAA,OAAIA,IAAI,CAACX,EAAE,CAACyC,QAAQ,CAAC,CAAC;MAAA,CAAC;MACzCC,qBAAqB,EAAE7B,MAAM,CAAC8B,aAAc;MAC5CC,kBAAkB,EAAErB,eAAgB;MACpCsB,cAAc,EACZ/E,IAAA,CAACN,cAAc;QACbsB,UAAU,EAAEA,UAAW;QACvBgE,SAAS,EAAEjD,aAAc;QACzBoC,MAAM,EAAE,CAACtE,KAAK,CAACsE,MAAM,CAACC,OAAO,CAAE;QAC/Ba,uBAAuB,EAAEpF,KAAK,CAACsE,MAAM,CAACe,IAAK;QAC3CC,SAAS,EAAEtF,KAAK,CAACsE,MAAM,CAACC;MAAQ,CACjC;IACF,CACF,CAAC,EAEFlE,KAAA,CAACf,IAAI;MAAC2D,KAAK,EAAEC,MAAM,CAACqC,eAAgB;MAAAjC,QAAA,GAClCnD,IAAA,CAACJ,MAAM;QACLiE,KAAK,EAAC,iBAAiB;QACvBX,OAAO,EAAER,gBAAiB;QAC1BoB,OAAO,EAAC,SAAS;QACjBhB,KAAK,EAAEC,MAAM,CAACsC;MAAO,CACtB,CAAC,EACFrF,IAAA,CAACJ,MAAM;QACLiE,KAAK,EAAC,gBAAgB;QACtBX,OAAO,EAAEf,mBAAoB;QAC7B2B,OAAO,EAAC,SAAS;QACjBwB,QAAQ,EAAE,CAAClE,cAAe;QAC1B0B,KAAK,EAAEC,MAAM,CAACsC;MAAO,CACtB,CAAC;IAAA,CACE,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMtC,MAAM,GAAG1D,UAAU,CAACkG,MAAM,CAAC;EAC/BjB,SAAS,EAAE;IACTkB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE5F,KAAK,CAACsE,MAAM,CAACuB;EAChC,CAAC;EACDnB,MAAM,EAAE;IACNoB,OAAO,EAAE9F,KAAK,CAAC+F,OAAO,CAACC,EAAE;IACzBC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAElG,KAAK,CAACsE,MAAM,CAAC6B;EAClC,CAAC;EACDnC,KAAK,EAAE;IACLoC,QAAQ,EAAEpG,KAAK,CAACqG,UAAU,CAACC,SAAS,CAACC,EAAE;IACvCC,UAAU,EAAExG,KAAK,CAACqG,UAAU,CAACI,WAAW,CAACC,IAAW;IACpDrC,KAAK,EAAErE,KAAK,CAACsE,MAAM,CAACqC;EACtB,CAAC;EACDxC,gBAAgB,EAAE;IAChBwB,IAAI,EAAE,CAAC;IACPiB,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBjB,eAAe,EAAE5F,KAAK,CAACsE,MAAM,CAACuB;EAChC,CAAC;EACDrB,WAAW,EAAE;IACXsC,SAAS,EAAE9G,KAAK,CAAC+F,OAAO,CAACgB,EAAE;IAC3B1C,KAAK,EAAErE,KAAK,CAACsE,MAAM,CAACqC,IAAI;IACxBP,QAAQ,EAAEpG,KAAK,CAACqG,UAAU,CAACC,SAAS,CAACS;EACvC,CAAC;EACD/B,aAAa,EAAE;IACbgC,QAAQ,EAAE,CAAC;IACXlB,OAAO,EAAE9F,KAAK,CAAC+F,OAAO,CAACgB;EACzB,CAAC;EACD5D,QAAQ,EAAA8D,aAAA;IACNC,aAAa,EAAE,KAAK;IACpBpB,OAAO,EAAE9F,KAAK,CAAC+F,OAAO,CAACgB,EAAE;IACzBnB,eAAe,EAAE5F,KAAK,CAACsE,MAAM,CAACe,IAAI;IAClC8B,YAAY,EAAEnH,KAAK,CAACoH,MAAM,CAACL,EAAE;IAC7BM,YAAY,EAAErH,KAAK,CAAC+F,OAAO,CAACgB;EAAE,GAC3B/G,KAAK,CAACsH,OAAO,CAACC,EAAE,CACpB;EACDnE,gBAAgB,EAAE;IAChBwC,eAAe,EAAE5F,KAAK,CAACsE,MAAM,CAACkD,OAAO;IACrCC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE1H,KAAK,CAACsE,MAAM,CAACC;EAC5B,CAAC;EACDhB,QAAQ,EAAE;IACRoC,IAAI,EAAE;EACR,CAAC;EACDhD,QAAQ,EAAE;IACRyD,QAAQ,EAAEpG,KAAK,CAACqG,UAAU,CAACC,SAAS,CAACS,EAAE;IACvCP,UAAU,EAAExG,KAAK,CAACqG,UAAU,CAACI,WAAW,CAACkB,QAAe;IACxDtD,KAAK,EAAErE,KAAK,CAACsE,MAAM,CAACqC,IAAI;IACxBU,YAAY,EAAE;EAChB,CAAC;EACD5D,eAAe,EAAE;IACf2C,QAAQ,EAAEpG,KAAK,CAACqG,UAAU,CAACC,SAAS,CAACiB,EAAE;IACvClD,KAAK,EAAErE,KAAK,CAACsE,MAAM,CAACsD;EACtB,CAAC;EACDlE,SAAS,EAAE;IACTkD,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBgB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVX,YAAY,EAAE,EAAE;IAChBvB,eAAe,EAAE5F,KAAK,CAACsE,MAAM,CAACC;EAChC,CAAC;EACDZ,aAAa,EAAE;IACbU,KAAK,EAAErE,KAAK,CAACsE,MAAM,CAACuB,UAAU;IAC9BO,QAAQ,EAAEpG,KAAK,CAACqG,UAAU,CAACC,SAAS,CAACiB,EAAE;IACvCf,UAAU,EAAExG,KAAK,CAACqG,UAAU,CAACI,WAAW,CAACC;EAC3C,CAAC;EACDnB,eAAe,EAAE;IACfO,OAAO,EAAE9F,KAAK,CAAC+F,OAAO,CAACC,EAAE;IACzB+B,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAEhI,KAAK,CAACsE,MAAM,CAAC6B;EAC/B,CAAC;EACDX,MAAM,EAAE;IACNyC,cAAc,EAAEjI,KAAK,CAAC+F,OAAO,CAACmC;EAChC,CAAC;EACDrE,cAAc,EAAE;IACd8B,IAAI,EAAE,CAAC;IACPiB,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBf,OAAO,EAAE9F,KAAK,CAAC+F,OAAO,CAACQ;EACzB,CAAC;EACDzC,SAAS,EAAE;IACTsC,QAAQ,EAAEpG,KAAK,CAACqG,UAAU,CAACC,SAAS,CAACN,EAAE;IACvCQ,UAAU,EAAExG,KAAK,CAACqG,UAAU,CAACI,WAAW,CAAC0B,MAAa;IACtD9D,KAAK,EAAErE,KAAK,CAACsE,MAAM,CAACqC,IAAI;IACxBU,YAAY,EAAErH,KAAK,CAAC+F,OAAO,CAACwB;EAC9B,CAAC;EACDxD,YAAY,EAAE;IACZqC,QAAQ,EAAEpG,KAAK,CAACqG,UAAU,CAACC,SAAS,CAACS,EAAE;IACvC1C,KAAK,EAAErE,KAAK,CAACsE,MAAM,CAACsD,aAAa;IACjCQ,SAAS,EAAE,QAAQ;IACnBf,YAAY,EAAErH,KAAK,CAAC+F,OAAO,CAACC;EAC9B,CAAC;EACD9B,WAAW,EAAE;IACX4C,SAAS,EAAE9G,KAAK,CAAC+F,OAAO,CAACgB;EAC3B;AACF,CAAC,CAAC;AAEF,eAAezG,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}